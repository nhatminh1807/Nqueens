Ưu điểm:

•Dùng quay lui để kiểm tra tất cả các cách đặt quân hậu hợp lệ.
•Hàm check() đảm bảo rằng mỗi quân hậu mới đặt không bị tấn công bởi quân hậu đã đặt trước đó.
•Code đơn giản, sử dụng đệ quy để kiểm tra từng vị trí hợp lệ.
•Không sử dụng thuật toán quá phức tạp, dễ mở rộng cho các giá trị n lớn hơn.
•Không cần sử dụng thêm mảng đánh dấu:
 + Một số giải pháp dùng mảng col[], diag1[], diag2[] để kiểm tra nhanh hơn, nhưng ở đây chỉ sử dụng một mảng x[], giúp tiết kiệm bộ nhớ.

Nhược điểm:

• Hiệu suất không tối ưu:

• Do mỗi lần đặt quân hậu, chương trình kiểm tra lại toàn bộ danh sách quân hậu đã đặt, nên độ phức tạp gần với O(n!).
• Với n lớn, chương trình sẽ chạy chậm do phải thử nhiều nhánh không cần thiết.
• Không sử dụng kỹ thuật tối ưu hóa:
+  Có thể cải thiện bằng cách dùng bitmask hoặc mảng đánh dấu (col[], diag1[], diag2[]) để giảm thời gian kiểm tra va chạm.
• Duyệt toàn bộ lời giải:
 + Nếu chỉ cần tìm một lời giải hợp lệ thay vì liệt kê tất cả, thì chương trình không dừng lại ngay khi tìm được lời giải đầu tiên.
• Cách in kết quả tốn bộ nhớ:
 + Xuất ra toàn bộ bàn cờ dưới dạng n x n sẽ tốn nhiều tài nguyên, nhất là với n lớn. Thay vào đó, chỉ cần in danh sách x[i] là đủ.
